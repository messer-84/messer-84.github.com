$arial: Arial, sans-serif;

$roboto: 'roboto', $arial;
$bebas_bold: 'bebas_neue_bold', $arial;
$bebas: 'bebas_neue_regular', $arial;
$bebas_light: 'bebas_neue_light', $arial;
$default_font: 'Trebuchet MS', $arial;

$main_bg:#fff;

$main_bg_ie: $main_bg;



$yellow: #ffd512;
$blue: #00aeff;
$orange: #ff8200;

$placeholder_color: #000;

$placeholder_color_2: #000;

$content_block_width:1180px;

$content_block_max_width: 0;


//-------------------------------------------------------layout
$header_h: 165px;
$footer_h: 458px;
//-------------------------------------------------------layout
//-------------------------------------------------------responsive

$wide_page_step_1: 1650px;
$wide_page_step_2: 1500px;

//-------------------------------------------------------responsive

@mixin main_bg{
	@if $ie8 == true {
		background-color: $main_bg_ie;
	} @else{
		@if $ie7 == true {
			background-color: $main_bg_ie;
		} @else{
			background-color: $main_bg;
		}
	}
}

@mixin style_separator($var: false, $var2: false, $var3: false, $var4: false, $var5: false, $var6: false, $var7: false, $var8: false, $var9: false) {
	@if $var == $local_var or $var2 == $local_var or $var3 == $local_var or $var4 == $local_var or $var5 == $local_var or $var6 == $local_var or $var7 == $local_var or $var8 == $local_var or $var9 == $local_var{
		@content;
	}
}

@mixin doc_check{
	@if $doc == true {
		@content;
	}
}

@mixin develop_check{
	@if $develop == true {
		@content;
	}
}

@mixin production_check{
	@if $production == true {
		@content;
	}
}

@mixin ie_7_check{
	@if $ie7 == true {
		@content;
	}
}

@mixin no_ie_7_check{
	@if $ie7 == false {
		@content;
	}
}

@mixin ie_8_check{
	@if $ie8 == true {
		@content;
	}
}

@mixin ie_7_8_check{
	@if $ie7 == true {
		@content;
	}
	@if $ie8 == true {
		@content;
	}
}

@mixin ie_9_check{
	@if $ie9 == true {
		@content;
	}
}

@mixin ie_8_9_check{
	@if $ie8 == true {
		@content;
	}
	@if $ie9 == true {
		@content;
	}
}

@mixin all_check{
	@if $all == true {
		@content;
	}
}

@mixin all_ie9_check{
	@if $all == true {
		@content;
	}
	@if $ie9 == true {
		@content;
	}
}

//use example
//@include respond-to(small_s) { width: 100% ;}
//@include respond-to(medium_s) { width: 125px; }
//@include respond-to(wide_s) { float: none; }

@mixin respond-to($media) {
	@if $media == small_s {
		@media only screen and (max-width: $small) {
			@content;
		}
	} @else if $media == medium_s {
		@media only screen and (min-width: $small + 1) and (max-width: $large - 1) {
			@content;
		}
	} @else if $media == wide_max_s {
		@media only screen and (max-width: $large - 1) {
			@content;
		}
	} @else if $media == wide_s {
		@media only screen and (min-width: $large) {
			@content;
		}
	}
}

@mixin respond-to-max($custom) {
	@media only screen and (max-width: $custom - 1) {
		@content;
	}
}

@mixin respond-to-min($custom1) {
	@media only screen and (min-width: $custom1) {
		@content;
	}
}

@mixin respond-min-max($custom2, $custom3) {
	@media only screen and (min-width: $custom2 + 1) and (max-width: $custom3 - 1) {
		@content;
	}
}

@mixin respond-to-min-out-max($custom3, $custom2) {
	@media only screen and (max-width: $custom3 - 1), only screen and (min-width: $custom2 + 1) {
		@content;
	}
}

@mixin mobile($pixel-ratio: 1) {
	@media (-webkit-min-device-pixel-ratio: 2), // Webkit-based browsers */
	(min--moz-device-pixel-ratio: 2), // Older Firefox browsers (prior to Firefox 16) */
	(min-resolution: 2dppx), // The standard way */
	(min-resolution: 192dpi),
	(max-device-width: 965px) {
		@content;
	}
}

@mixin opacity($opacity: 1, $important: false) {
	@if $important == true{
		@if $ie8 == true {
			$opacity: $opacity * 100;
			-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity='#{$opacity}')" !important;
		} @else if $ie7 == true {
			$opacity: $opacity * 100;
			filter: alpha(opacity='#{$opacity}') !important;
		} @else{
			opacity: $opacity !important;
		}
	} @else{
		@if $ie8 == true {
			$opacity: $opacity * 100;
			-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity='#{$opacity}')";
		} @else if $ie7 == true {
			$opacity: $opacity * 100;
			filter: alpha(opacity='#{$opacity}');
		} @else{
			opacity: $opacity;
		}
	}

}

@mixin flex_block($flow, $content: space-between) {
	display: -webkit-flex;
	display: flex;
	-webkit-flex-flow: $flow;
	flex-flow: $flow;
	justify-content: $content;
}

@mixin transition_all($property...) {
	@if $all == true  {
		-webkit-transition: $property;
		-moz-transition: $property;
		-o-transition: $property;
		transition: $property;
	}
}

@mixin transition($property: all, $duration: .3s, $easing: ease-in-out, $delay: blank, $important: blank) {
	@if $all == true  {
		@if $property == none{
			-webkit-transition: $property !important;
			-moz-transition: $property !important;
			-o-transition: $property !important;
			transition: $property !important;
		} @else{
			@if $delay != blank{
				@if $easing != blank{
					@if $important != blank{
						-webkit-transition: $property $duration $easing $delay !important;
						-moz-transition: $property $duration $easing $delay !important;
						-o-transition: $property $duration $easing $delay !important;
						transition: $property $duration $easing $delay !important;
					} @else{
						-webkit-transition: $property $duration $easing $delay;
						-moz-transition: $property $duration $easing $delay;
						-o-transition: $property $duration $easing $delay;
						transition: $property $duration $easing $delay;
					}
				} @else{
					@if $important != blank{
						-webkit-transition: $property $duration $delay !important;
						-moz-transition: $property $duration $delay !important;
						-o-transition: $property $duration $delay !important;
						transition: $property $duration $delay !important;
					} @else{
						-webkit-transition: $property $duration $delay;
						-moz-transition: $property $duration $delay;
						-o-transition: $property $duration $delay;
						transition: $property $duration $delay;
					}

				}
			} @else{
				@if $easing != blank{
					@if $property == transform{
						@if $important != blank{
							-webkit-transition: -webkit-#{$property} $duration $easing !important;
							-moz-transition: -moz-#{$property} $duration $easing !important;
							-o-transition: -o-#{$property} $duration $easing !important;
							transition: $property $duration $easing !important;
						} @else{
							-webkit-transition: -webkit-#{$property} $duration $easing;
							-moz-transition: -moz-#{$property} $duration $easing;
							-o-transition: -o-#{$property} $duration $easing;
							transition: $property $duration $easing;
						}

					} @else{
						@if $important != blank{
							-webkit-transition: $property $duration $easing !important;
							-moz-transition: $property $duration $easing !important;
							-o-transition: $property $duration $easing !important;
							transition: $property $duration $easing !important;
						} @else{
							-webkit-transition: $property $duration $easing;
							-moz-transition: $property $duration $easing;
							-o-transition: $property $duration $easing;
							transition: $property $duration $easing;
						}

					}

				} @else{
					@if $property == transform{
						@if $important != blank{
							-webkit-transition: -webkit-#{$property} $duration !important;
							-moz-transition: -moz-#{$property} $duration !important;
							-o-transition: -o-#{$property} $duration !important;
							transition: $property $duration !important;
						} @else{
							-webkit-transition: -webkit-#{$property} $duration;
							-moz-transition: -moz-#{$property} $duration;
							-o-transition: -o-#{$property} $duration;
							transition: $property $duration;
						}

					} @else{
						@if $important != blank{
							-webkit-transition: $property $duration !important;
							-moz-transition: $property $duration !important;
							-o-transition: $property $duration !important;
							transition: $property $duration !important;
						} @else{
							-webkit-transition: $property $duration;
							-moz-transition: $property $duration;
							-o-transition: $property $duration;
							transition: $property $duration;
						}

					}
				}
			}

		}
	}
}

@mixin clearfix{
	&:after{
		content: "";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
	}
}

.clearfix{
	&:after{
		content: "";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
	}
}

@mixin user-select-none{
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	-o-user-select: none;
	user-select: none;
}

@mixin inline_block_wrapper{
	font-size: 0;
	line-height: 0;
	letter-spacing: -1px;
}

@mixin inline_block_element($font-size: 15px, $line-height: 1.4, $letter-spacing: normal) {
	display: inline-block;
	font-size: $font-size;
	line-height: $line-height;
	letter-spacing: $letter-spacing;
	@if $ie7 == true {
		display: inline;
	}
}

@mixin border_box{
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

@mixin content_box{
	-webkit-box-sizing: content-box;
	-moz-box-sizing: content-box;
	box-sizing: content-box;
}

@mixin inline_block{
	@if $ie7 == true {
		display: inline-block;
		display: inline;
	} @else{
		display: inline-block;
	}
}

@mixin radial_grad($color_one: #000, $color_two: #fff, $center: bottom, $color_bg: false) {
	@if $all == true  {
		background-image: -moz-radial-gradient($center, ellipse cover, $color_one 0%, $color_two 100%);
		background-image: -webkit-radial-gradient($center, ellipse cover, $color_one 0%, $color_two 100%);
		background-image: -o-radial-gradient($center, ellipse cover, $color_one 0%, $color_two 100%);
		background-image: -ms-radial-gradient($center, ellipse cover, $color_one 0%, $color_two 100%);
		background-image: radial-gradient($center, ellipse cover, $color_one 0%, $color_two 100%);
	} @else{
		@if $color_bg == false  {
			background-color: $color_one;
		} @else{
			background-color: $color_bg;
		}
	}
}

@mixin radial_grad_custom($color_one: #000, $color_two: #fff, $center: bottom, $percent: 100%, $color_bg: false) {
	@if $all == true  {
		background-image: -moz-radial-gradient($center, ellipse cover, $color_one 0%, $color_two $percent);
		background-image: -webkit-radial-gradient($center, ellipse cover, $color_one 0%, $color_two $percent);
		background-image: -ms-radial-gradient($center, ellipse cover, $color_one 0%, $color_two $percent);
		background-image: radial-gradient($center, ellipse cover, $color_one 0%, $color_two $percent);
	} @else{
		@if $color_bg == false  {
			background-color: $color_one;
		} @else{
			background-color: $color_bg;
		}
	}
}

@mixin vert_grad($color_one: #000, $color_two: #fff, $color_bg: false) {
	@if $all == true  {
		background-image: -webkit-linear-gradient(top, $color_one 0%, $color_two 100%);
		background-image: linear-gradient(to bottom, $color_one 0%, $color_two 100%);
	} @else{
		@if $color_bg == false  {
			background-color: $color_one;
		} @else{
			background-color: $color_bg;
		}
	}
}

@mixin vert_grad_full($grad...) {
	background-image: -webkit-linear-gradient(bottom, $grad);
	background-image: linear-gradient(to top, $grad);
}

@mixin vert_grad_full_top($grad...) {
	background-image: -webkit-linear-gradient(top, $grad);
	background-image: linear-gradient(to bottom, $grad);
}

@mixin hor_grad_full($grad...) {
	background-image: -webkit-linear-gradient(right, $grad);
	background-image: linear-gradient(to left, $grad);
}

@mixin hor_grad_full_left($grad...) {
	background-image: -webkit-linear-gradient(left, $grad);
	background-image: linear-gradient(to right, $grad);
}

@mixin radial_grad_full($grad...) {
	background-image: -webkit-radial-gradient($grad);
	background-image: radial-gradient($grad);
}

@mixin vert_grad_no_check($color_one: #000, $color_two: #fff) {
	background-image: -webkit-linear-gradient(top, $color_one 0%, $color_two 100%);
	background-image: linear-gradient(to bottom, $color_one 0%, $color_two 100%);
}

@mixin vert_grad_50_50($color_one: #000, $color_two: #fff, $color_three: #000, $color_four: #fff) {
	@if $all == true  {
		background-image: -webkit-linear-gradient(bottom, $color_one 0%, $color_two 49%, $color_three 50%, $color_four 100%);
		background-image: linear-gradient(to top, $color_one 0%, $color_two 49%, $color_three 50%, $color_four 100%);
	} @else{
		background-color: $color_one;
	}
}

@mixin diagonal_grad_full($color...) {
	background-image: -webkit-linear-gradient(-45deg, $color);
	background-image: linear-gradient(135deg, $color);
}

@mixin diagonal_grad($color_one: #000, $color_two: #fff) {
	@if $all == true  {
		background-image: -webkit-linear-gradient(-45deg, $color_one 0%, $color_two 100%);
		background-image: linear-gradient(135deg, $color_one 0%, $color_two 100%);
	} @else{
		background-color: $color_one;
	}
}

@mixin text-shadow($shadows...) {
	@include all_ie9_check{
		text-shadow: $shadows;
	}
}

@mixin box-shadow($shadows...) {
	@include all_ie9_check{
		-moz-box-shadow: $shadows;
		-webkit-box-shadow: $shadows;
		box-shadow: $shadows;
	}
}

@mixin box-shadow_no_check($shadows...) {
	-moz-box-shadow: $shadows;
	-webkit-box-shadow: $shadows;
	box-shadow: $shadows;
}

@mixin transform_all($transform_all...) {
	@include all_ie9_check{
		-moz-transform: $transform_all;
		-webkit-transform: $transform_all;
		-o-transform: $transform_all;
		-ms-transform: $transform_all;
		transform: $transform_all;
	}
}

@mixin transform_all_no_check($transform_all...) {
	-moz-transform: $transform_all;
	-webkit-transform: $transform_all;
	-o-transform: $transform_all;
	-ms-transform: $transform_all;
	transform: $transform_all;
}

@mixin transform-origin($transform_all...) {
	-webkit-transform-origin: $transform_all;
	-ms-transform-origin: $transform_all;
	transform-origin: $transform_all;
}

@mixin transform-style($value: true) {
	$inner_value: preserve-3d;
	@if($value == true){
		$inner_value: preserve-3d;
	} @else{
		$inner_value: flat;
	}
	-webkit-transform-style: $inner_value;
	transform-style: $inner_value;
}

@mixin perspective($value) {
	-webkit-perspective: $value;
	perspective: $value;
}

@mixin transform_skewX($deg: 0, $check: false) {
	@if $check == false  {
		@include all_ie9_check{
			-webkit-transform: skewX($deg+deg);
			-ms-transform: skewX($deg+deg);
			transform: skewX($deg+deg);
		}
	} @else{
		-webkit-transform: skewX($deg+deg);
		-ms-transform: skewX($deg+deg);
		transform: skewX($deg+deg);
	}
}

@mixin transform_skewY($deg: 0, $check: false) {
	@if $check == false  {
		@include all_ie9_check{
			-webkit-transform: skewY($deg+deg);
			-ms-transform: skewY($deg+deg);
			transform: skewY($deg+deg);
		}
	} @else{
		-webkit-transform: skewY($deg+deg);
		-ms-transform: skewY($deg+deg);
		transform: skewY($deg+deg);
	}
}

@mixin transform_skew($deg: 0, $deg2: 0, $check: false) {
	@if $check == false  {
		@include all_ie9_check{
			-webkit-transform: skew($deg+deg, $deg2+deg);
			-ms-transform: skew($deg+deg, $deg2+deg);
			transform: skew($deg+deg, $deg2+deg);
		}
	} @else{
		-webkit-transform: skew($deg+deg, $deg2+deg);
		-ms-transform: skew($deg+deg, $deg2+deg);
		transform: skew($deg+deg, $deg2+deg);
	}
}

@mixin transform($transform...) {
	@include all_ie9_check{
		-webkit-transform: $transform;
		-ms-transform: $transform;
		transform: $transform;
	}
}

@mixin transform_scale($ratio: 0, $check: false) {
	@if $check == false  {
		@include all_ie9_check{
			-moz-transform: scale($ratio);
			-webkit-transform: scale($ratio);
			-o-transform: scale($ratio);
			-ms-transform: scale($ratio);
			transform: scale($ratio);
		}
	} @else{
		-moz-transform: scale($ratio);
		-webkit-transform: scale($ratio);
		-o-transform: scale($ratio);
		-ms-transform: scale($ratio);
		transform: scale($ratio);
	}
}

@mixin transform_rotate($deg: 0, $check: false) {
	@if $check == false  {
		@include all_ie9_check{
			-moz-transform: rotate($deg+deg);
			-webkit-transform: rotate($deg+deg);
			-o-transform: rotate($deg+deg);
			-ms-transform: rotate($deg+deg);
			transform: rotate($deg+deg);
		}
	} @else{
		-moz-transform: rotate($deg+deg);
		-webkit-transform: rotate($deg+deg);
		-o-transform: rotate($deg+deg);
		-ms-transform: rotate($deg+deg);
		transform: rotate($deg+deg);
	}
}

@mixin transform_rotate_no_check($deg: 0, $imp: false) {
	@if $imp == true {
		-moz-transform: rotate($deg+deg) !important;
		-webkit-transform: rotate($deg+deg) !important;
		-o-transform: rotate($deg+deg) !important;
		-ms-transform: rotate($deg+deg) !important;
		transform: rotate($deg+deg) !important;
	} @else{
		-moz-transform: rotate($deg+deg);
		-webkit-transform: rotate($deg+deg);
		-o-transform: rotate($deg+deg);
		-ms-transform: rotate($deg+deg);
		transform: rotate($deg+deg);
	}
}

@mixin transform_translate_sub($x: 0, $y: 0, $imp: false, $d3: false) {
	@if $imp == true {
		@if $d3 == true {
			-webkit-transform: translate3d($x, $y, 0) !important;
			-moz-transform: translate($x, $y) !important;
			-o-transform: translate($x, $y) !important;
			transform: translate($x, $y) !important;
		} @else{
			-webkit-transform: translate($x, $y) !important;
			-moz-transform: translate($x, $y) !important;
			-o-transform: translate($x, $y) !important;
			transform: translate($x, $y) !important;
		}
	} @else{
		@if $d3 == true {
			-webkit-transform: translate3d($x, $y, 0);
			-moz-transform: translate($x, $y);
			-o-transform: translate($x, $y);
			transform: translate($x, $y);
		} @else{
			-webkit-transform: translate($x, $y);
			-moz-transform: translate($x, $y);
			-o-transform: translate($x, $y);
			transform: translate($x, $y);
		}

	}
}

@mixin transform_translate($x: 0, $y: 0, $imp: false, $check: false, $d3: false) {
//-webkit-transform: translate3d($x,$y,0);
	@if $check == false  {
		@if $ie8 == false  {
			@include transform_translate_sub($x, $y, $imp, $d3);
		} @else{
			@if $x != 0  {
				left: $x;
			}
			@if $y != 0  {
				top: $x;
			}
		}
	} @else{
		@include transform_translate_sub($x, $y, $imp, $d3);
	}
}

@mixin translate3d($var1: 0, $var2: 0, $var3: 0, $check: false) {
	@if $check == false  {
		@include all_ie9_check{
			-webkit-transform: translate3d($var1, $var2, $var3);
			-moz-transform: translate3d($var1, $var2, $var3);
			transform: translate3d($var1, $var2, $var3);
		}
	} @else{
		-webkit-transform: translate3d($var1, $var2, $var3);
		-moz-transform: translate3d($var1, $var2, $var3);
		transform: translate3d($var1, $var2, $var3);
	}
}

@mixin keyframe($animation_name, $check: false) {
	@if $check == false  {
		@if $all == true  {
			@include keyframe_sub($animation_name);
		}
	} @else{
		@include keyframe_sub($animation_name);
	}
}

//@mixin keyframe_sub($animation_name) {
//	@-webkit-keyframes $animation_name {
//		@content;
//	}
//
//	@-moz-keyframes $animation_name {
//		@content;
//	}
//
//	@keyframes $animation_name {
//		@content;
//	}
//}

@mixin animation($animation, $duration, $timing-function: linear, $delay: 0, $direction: normal, $iteration-count: infinite, $fill-mode: both, $check: false, $full: false) {
	@if $check == false  {
		@if $all == true  {
			@if $full != true  {
				@include animation_sub($animation, $duration, $timing-function, $delay, $iteration-count, $direction, $fill-mode);
			} @else{
				@include animation_sub_full($animation, $duration, $timing-function, $delay, $iteration-count, $direction, $fill-mode);
			}
		}
	} @else{
		@if $full != true  {
			@include animation_sub($animation, $duration, $timing-function, $delay, $iteration-count, $direction, $fill-mode);
		} @else{
			@include animation_sub_full($animation, $duration, $timing-function, $delay, $iteration-count, $direction, $fill-mode);
		}
	}
}

@mixin animation_custom($animation...) {
	-webkit-animation: $animation;
	-moz-animation: $animation;
	animation: $animation;
}

@mixin animation_sub_full($animation, $duration, $timing-function, $delay, $iteration-count, $direction, $fill-mode) {
	-webkit-animation-name: $animation;
	-webkit-animation-duration: $duration;
	-webkit-animation-timing-function: $timing-function;
	-webkit-animation-delay: $delay;
	-webkit-animation-iteration-count: $iteration-count;
	-webkit-animation-direction: $direction;
	-webkit-animation-fill-mode: $fill-mode;

	-moz-animation-name: $animation;
	-moz-animation-duration: $duration;
	-moz-animation-timing-function: $timing-function;
	-moz-animation-delay: $delay;
	-moz-animation-iteration-count: $iteration-count;
	-moz-animation-direction: $direction;
	-moz-animation-fill-mode: $fill-mode;

	animation-name: $animation;
	animation-duration: $duration;
	animation-timing-function: $timing-function;
	animation-delay: $delay;
	animation-iteration-count: $iteration-count;
	animation-direction: $direction;
	animation-fill-mode: $fill-mode;
}

@mixin animation_sub($animation, $duration, $timing-function, $delay, $iteration-count, $direction, $fill-mode) {
	-webkit-animation: $animation $duration $timing-function $delay $iteration-count $direction $fill-mode;
	-moz-animation: $animation $duration $timing-function $delay $iteration-count $direction $fill-mode;
	animation: $animation $duration $timing-function $delay $iteration-count $direction $fill-mode;
}

@mixin column($column-count: 0, $column-gap: 0) {
	@include all_ie9_check{
		-moz-column-count: $column-count;
		-moz-column-gap: $column-gap;
		-webkit-column-count: $column-count;
		-webkit-column-gap: $column-gap;
		column-count: $column-count;
		column-gap: $column-gap;
	}
}

@mixin hover_animation($duration: .3s, $easing: ease-in-out, $x: 200px, $y: 0) {
	@include all_ie9_check{
		display: block !important;
		opacity: 0;
		-webkit-transition: opacity $duration, visibility $duration, -webkit-transform $duration $easing;
		-moz-transition: opacity $duration, visibility $duration, -moz-transform $duration $easing;
		-o-transition: opacity $duration, visibility $duration, -o-transform $duration $easing;
		transition: opacity $duration, visibility $duration, transform $duration $easing;
		-webkit-transform: translate3d($x, $y, 0);
		//-webkit-transform: translate($x,$y);
		-moz-transform: translate($x, $y);
		-o-transform: translate($x, $y);
		transform: translate($x, $y);
		visibility: hidden;
	}
	@include ie_7_check{
		display: none;
	}
	@include ie_8_check{
		display: none;
	}
}

@mixin hover_animation_hover_state($x: 0, $y: 0) {
	@include all_ie9_check{
		opacity: 1;
		-webkit-transform: translate3d($x, $y, 0);
		//-webkit-transform: translate($x,$y);
		-moz-transform: translate($x, $y);
		-o-transform: translate($x, $y);
		transform: translate($x, $y);
		visibility: visible;

		.safari &{
			-webkit-transition: opacity 0.3s, -webkit-transform 0.3s ease-in-out;
			-moz-transition: opacity 0.3s, transform 0.3s ease-in-out;
			-o-transition: opacity 0.3s, transform 0.3s ease-in-out;
			transition: opacity 0.3s, transform 0.3s ease-in-out;
		}
	}
	@include ie_7_check{
		display: block;
	}
	@include ie_8_check{
		display: block;
	}
}

@mixin border_radius_shadow($x: 0, $y: 0) {
	@include all_ie9_check{
		border-top-right-radius: $x $y;
		border-top-left-radius: $x $y;
		border-bottom-left-radius: $x $y;
		border-bottom-right-radius: $x $y;
	}
}

@mixin top_grad_v1($height: 88px, $side_indent: 0) {
	&:before{
		z-index: -1;
		position: absolute;
		height: $height;
		max-height: 100% !important;
		top: 0;
		left: $side_indent;
		right: $side_indent;
		content: "";
		@if $ie8 == true {
			border-top: 1px solid #e3e3e3;
		} @else{
			@include box-shadow(0 -1px 0 rgba(0, 0, 0, 0.11), inset 0 1px 0 #fefefe);
			@include vert_grad(#fafafa, #fff);
		}
	}
}

@mixin appearance($x, $check: false) {
	@if $check == false  {
		@include all_check{
			-webkit-appearance: $x;
			-moz-appearance: $x;
			appearance: $x;
		}
	} @else{
		-webkit-appearance: $x;
		-moz-appearance: $x;
		appearance: $x;
	}

}

@mixin columns($columncount: 2, $columngap: 20px) {
	-moz-column-count: $columncount;
	-moz-column-gap: $columngap;
	-webkit-column-count: $columncount;
	-webkit-column-gap: $columngap;
	column-count: $columncount;
	column-gap: $columngap;
}

@mixin border_corner_top($b_color: 0, $b_width: 4px) {
	width: 0;
	height: 0;
	border-left: $b_width solid transparent;
	border-right: $b_width solid transparent;
	border-bottom: $b_width solid $b_color;
}

@mixin border_corner_top_new($b_color: 0, $b_width: 4px, $b_side_width: 4px) {
	width: 0;
	height: 0;
	border-left: $b_side_width solid transparent;
	border-right: $b_side_width solid transparent;
	border-bottom: $b_width solid $b_color;
}

@mixin border_corner_bott($b_color: 0, $b_width: 4px, $b_side_width: 4px) {
	width: 0;
	height: 0;
	border-left: $b_side_width solid transparent;
	border-right: $b_side_width solid transparent;
	border-top: $b_width solid $b_color;
}

@mixin border_corner_left($b_color: 0, $b_width: 4px, $b_side_width: 4px) {
	width: 0;
	height: 0;
	border-top: $b_side_width solid transparent;
	border-bottom: $b_side_width solid transparent;
	border-right: $b_width solid $b_color;
}

@mixin border_corner_right($b_color: 0, $b_width: 4px, $b_side_width: 4px) {
	width: 0;
	height: 0;
	border-top: $b_side_width solid transparent;
	border-bottom: $b_side_width solid transparent;
	border-left: $b_width solid $b_color;
}

@mixin img_peplace{
	white-space: nowrap;
	text-indent: 100%;
	overflow: hidden;
}

@mixin wide_back{
	z-index: -1;
	position: absolute;
	left: 50%;
	width: 5000px;
	top: 0;
	content: "";
	margin: 0 0 0 -2500px;
}

//@import "develop/fonts";

@import "extends";
